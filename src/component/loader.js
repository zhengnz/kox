// Generated by CoffeeScript 1.12.1
(function() {
  var BaseModel, template, viewModel,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('./base');

  template = require('../tpl/loader.html');

  viewModel = (function(superClass) {
    extend(viewModel, superClass);

    function viewModel(params) {
      viewModel.__super__.constructor.call(this, params);
      this.visible = ko.pureComputed(function() {
        return ko.unwrap(params.visible || true);
      });
      this.cls = ko.pureComputed(function() {
        var cls, reverse, size;
        cls = 'ko-loader';
        size = ko.unwrap(params.size || null);
        if (size != null) {
          cls = cls + " ko-" + size;
        }
        reverse = ko.unwrap(params.reverse || false);
        if (reverse) {
          cls = cls + " ko-reverse";
        }
        return cls;
      });
      this.disposes = this.disposes.concat([this.visible, this.cls]);
    }

    return viewModel;

  })(BaseModel);

  ko.components.register('ko-loader', {
    viewModel: {
      createViewModel: function(params, componentInfo) {
        return new viewModel(params);
      }
    },
    template: template
  });

}).call(this);

//# sourceMappingURL=loader.js.map
