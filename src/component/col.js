// Generated by CoffeeScript 1.12.1
(function() {
  var BaseModel, template, viewModel,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('./base');

  template = require('../tpl/col.html');

  viewModel = (function(superClass) {
    extend(viewModel, superClass);

    function viewModel(params, parent, componentInfo) {
      viewModel.__super__.constructor.call(this, params);
      this.data = parent.$context;
      this.e = componentInfo.element.firstChild;
      ko.utils.toggleDomNodeCssClass(this.e, "ko-col", true);
      this.pre = {};
      this.col_class('span', params.size);
      this.col_class('pull', params.pull);
      this.col_class('push', params.push);
      this.col_class('offset', params.offset);
      this.col_class('lg-span', params.lgSize);
      this.col_class('lg-pull', params.lgPull);
      this.col_class('lg-push', params.lgPush);
      this.col_class('lg-offset', params.lgOffset);
      this.col_class('md-span', params.mdSize);
      this.col_class('md-pull', params.mdPull);
      this.col_class('md-push', params.mdPush);
      this.col_class('md-offset', params.mdOffset);
      this.col_class('sm-span', params.smSize);
      this.col_class('sm-pull', params.smPull);
      this.col_class('sm-push', params.smPush);
      this.col_class('sm-offset', params.smOffset);
      this.disposes.push(ko.computed((function(_this) {
        return function() {
          var gutter, px;
          gutter = ko.unwrap(parent.gutter || null);
          if (gutter != null) {
            px = (Math.floor(gutter / 2)) + "px";
            _this.e.firstChild.style['margin-left'] = px;
            return _this.e.firstChild.style['margin-right'] = px;
          } else {
            _this.e.firstChild.style['margin-left'] = 'auto';
            return _this.e.firstChild.style['margin-right'] = 'auto';
          }
        };
      })(this)));
      this.visible = ko.pureComputed(function() {
        var ref;
        return ko.unwrap((ref = params.visible) != null ? ref : true);
      });
      this.disposes.push(this.visible);
    }

    viewModel.prototype.col_class = function(name, observable) {
      return this.disposes.push(ko.computed((function(_this) {
        return function() {
          var value;
          value = ko.unwrap(observable != null ? observable : null);
          if (_this.pre[name] != null) {
            ko.utils.toggleDomNodeCssClass(_this.e, "ko-" + name + "-" + _this.pre[name], false);
          }
          if (value != null) {
            ko.utils.toggleDomNodeCssClass(_this.e, "ko-" + name + "-" + value, true);
          }
          return _this.pre[name] = value;
        };
      })(this)));
    };

    return viewModel;

  })(BaseModel);

  ko.components.register('ko-col', {
    viewModel: {
      createViewModel: function(params, componentInfo) {
        var parent;
        parent = ko.dataFor(componentInfo.element);
        return new viewModel(params, parent, componentInfo);
      }
    },
    template: template
  });

}).call(this);

//# sourceMappingURL=col.js.map
