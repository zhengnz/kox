(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.12.1
(function() {
  var BaseModel;

  BaseModel = (function() {
    function BaseModel(params) {
      this.disposes = [];
    }

    BaseModel.prototype.dispose = function() {
      return ko.utils.arrayForEach(this.disposes, function(obj) {
        return obj.dispose();
      });
    };

    return BaseModel;

  })();

  module.exports = BaseModel;

}).call(this);

//# sourceMappingURL=base.js.map

},{}],2:[function(require,module,exports){
// Generated by CoffeeScript 1.12.1
(function() {
  var BaseModel, btnGroupTemplate, btnTemplate, buttonGroupViewModel, buttonViewModel,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('./base');

  btnTemplate = require('../tpl/button.html');

  btnGroupTemplate = require('../tpl/buttonGroup.html');

  buttonViewModel = (function(superClass) {
    extend(buttonViewModel, superClass);

    function buttonViewModel(params, componentInfo) {
      var ieVersion, ref;
      buttonViewModel.__super__.constructor.call(this, params);
      this.data = ko.dataFor(componentInfo.element);
      ieVersion = (ref = ko.utils.ieVersion) != null ? ref : 10;
      this.can_use_animate = ieVersion > 9;
      this.click = params.click ? params.click.bind(this.data) : function() {};
      this.active = ko.observable(false);
      this.hover = ko.observable(false);
      this.disable = ko.pureComputed((function(_this) {
        return function() {
          return ko.unwrap(params.disable || false);
        };
      })(this));
      this.loading = ko.pureComputed((function(_this) {
        return function() {
          return ko.unwrap(params.loading || false);
        };
      })(this));
      this.href = ko.pureComputed((function(_this) {
        return function() {
          return ko.unwrap(params.href || 'javascript:;');
        };
      })(this));
      this.size = ko.pureComputed((function(_this) {
        return function() {
          return ko.unwrap(params.size || null);
        };
      })(this));
      this.type = ko.pureComputed(function() {
        return ko.unwrap(params.type || null);
      });
      this.cls = ko.pureComputed((function(_this) {
        return function() {
          var cls, fluid, shape;
          cls = 'ko-button';
          if (_this.type() != null) {
            cls = cls + " ko-" + (_this.type());
          }
          if (componentInfo.templateNodes.length === 0) {
            cls = cls + " ko-icon-only";
          }
          if (_this.active()) {
            cls = cls + " ko-active";
          }
          if (_this.hover()) {
            cls = cls + " ko-hover";
          }
          shape = ko.unwrap(params.shape || null);
          if (shape) {
            cls = cls + " ko-" + shape;
          }
          fluid = ko.unwrap(params.fluid || null);
          if (fluid) {
            cls = cls + " ko-fluid";
          }
          if (_this.size()) {
            cls = cls + " ko-" + (_this.size());
          }
          if (_this.disable() === true) {
            cls = cls + " ko-disable";
          }
          return cls;
        };
      })(this));
      this.icon = ko.pureComputed((function(_this) {
        return function() {
          return ko.unwrap(params.icon || null);
        };
      })(this));
      this.disposes = this.disposes.concat([this.cls]);
    }

    buttonViewModel.prototype.mouseDown = function() {
      return this.active(true);
    };

    buttonViewModel.prototype.mouseUp = function() {
      return this.active(false);
    };

    buttonViewModel.prototype.mouseOver = function() {
      return this.hover(true);
    };

    buttonViewModel.prototype.mouseOut = function() {
      return this.hover(false);
    };

    return buttonViewModel;

  })(BaseModel);

  ko.components.register('ko-button', {
    viewModel: {
      createViewModel: function(params, componentInfo) {
        return new buttonViewModel(params, componentInfo);
      }
    },
    template: btnTemplate
  });

  buttonGroupViewModel = (function() {
    function buttonGroupViewModel(params, componentInfo1) {
      this.componentInfo = componentInfo1;
      this.data = ko.dataFor(this.componentInfo.element);
      this.cls = ko.pureComputed(function() {
        var cls, shape, size, vertical;
        cls = 'ko-button-group';
        shape = ko.unwrap(params.shape || null);
        if (shape) {
          cls = cls + " ko-" + shape;
        }
        size = ko.unwrap(params.size || null);
        if (size) {
          cls = cls + " ko-" + size;
        }
        vertical = ko.unwrap(params.vertical || false);
        if (vertical) {
          cls = cls + " ko-vertical";
        }
        return cls;
      });
    }

    return buttonGroupViewModel;

  })();

  ko.components.register('ko-button-group', {
    viewModel: {
      createViewModel: function(params, componentInfo) {
        return new buttonGroupViewModel(params, componentInfo);
      }
    },
    template: btnGroupTemplate
  });

}).call(this);

//# sourceMappingURL=button.js.map

},{"../tpl/button.html":9,"../tpl/buttonGroup.html":10,"./base":1}],3:[function(require,module,exports){
// Generated by CoffeeScript 1.12.1
(function() {
  var BaseModel, template, viewModel,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('./base');

  template = require('../tpl/col.html');

  viewModel = (function(superClass) {
    extend(viewModel, superClass);

    function viewModel(params, parent, componentInfo) {
      viewModel.__super__.constructor.call(this, params);
      this.data = parent.$context;
      this.e = componentInfo.element.firstChild;
      ko.utils.toggleDomNodeCssClass(this.e, "ko-col", true);
      this.pre = {};
      this.col_class('span', params.size);
      this.col_class('pull', params.pull);
      this.col_class('push', params.push);
      this.col_class('offset', params.offset);
      this.col_class('lg-span', params.lgSize);
      this.col_class('lg-pull', params.lgPull);
      this.col_class('lg-push', params.lgPush);
      this.col_class('lg-offset', params.lgOffset);
      this.col_class('md-span', params.mdSize);
      this.col_class('md-pull', params.mdPull);
      this.col_class('md-push', params.mdPush);
      this.col_class('md-offset', params.mdOffset);
      this.col_class('sm-span', params.smSize);
      this.col_class('sm-pull', params.smPull);
      this.col_class('sm-push', params.smPush);
      this.col_class('sm-offset', params.smOffset);
      this.disposes.push(ko.computed((function(_this) {
        return function() {
          var gutter, px;
          gutter = ko.unwrap(parent.gutter || null);
          if (gutter != null) {
            px = (Math.floor(gutter / 2)) + "px";
            _this.e.firstChild.style['margin-left'] = px;
            return _this.e.firstChild.style['margin-right'] = px;
          } else {
            _this.e.firstChild.style['margin-left'] = 'auto';
            return _this.e.firstChild.style['margin-right'] = 'auto';
          }
        };
      })(this)));
      this.visible = ko.pureComputed(function() {
        var ref;
        return ko.unwrap((ref = params.visible) != null ? ref : true);
      });
      this.disposes.push(this.visible);
    }

    viewModel.prototype.col_class = function(name, observable) {
      return this.disposes.push(ko.computed((function(_this) {
        return function() {
          var value;
          value = ko.unwrap(observable != null ? observable : null);
          if (_this.pre[name] != null) {
            ko.utils.toggleDomNodeCssClass(_this.e, "ko-" + name + "-" + _this.pre[name], false);
          }
          if (value != null) {
            ko.utils.toggleDomNodeCssClass(_this.e, "ko-" + name + "-" + value, true);
          }
          return _this.pre[name] = value;
        };
      })(this)));
    };

    return viewModel;

  })(BaseModel);

  ko.components.register('ko-col', {
    viewModel: {
      createViewModel: function(params, componentInfo) {
        var parent;
        parent = ko.dataFor(componentInfo.element);
        return new viewModel(params, parent, componentInfo);
      }
    },
    template: template
  });

}).call(this);

//# sourceMappingURL=col.js.map

},{"../tpl/col.html":11,"./base":1}],4:[function(require,module,exports){
(function (global){
// Generated by CoffeeScript 1.12.1
(function() {
  var BaseModel, template, viewModel,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('./base');

  template = require('../tpl/icon.html');

  viewModel = (function(superClass) {
    extend(viewModel, superClass);

    function viewModel(params) {
      var config;
      viewModel.__super__.constructor.call(this, params);
      config = ko.utils.extend({
        search: '&#xe660;',
        toggle: '&#xe940;',
        'toggle-filled': '&#xe8c6;',
        locked: '&#xe81e;',
        unlocked: '&#xe949;'
      }, global.koxIconConfig || {});
      this.type = ko.pureComputed(function() {
        return config[ko.unwrap(params.type)];
      });
      this.cls = ko.pureComputed(function() {
        var cls, color, size;
        cls = 'iconfont ko-icon';
        size = ko.unwrap(params.size || null);
        if (size != null) {
          cls = cls + " ko-" + size;
        }
        color = ko.unwrap(params.color || null);
        if (color != null) {
          cls = cls + " ko-" + color;
        }
        return cls;
      });
      this.disposes = this.disposes.concat([this.type, this.cls]);
    }

    return viewModel;

  })(BaseModel);

  ko.components.register('ko-icon', {
    viewModel: {
      createViewModel: function(params, componentInfo) {
        return new viewModel(params);
      }
    },
    template: template
  });

}).call(this);

//# sourceMappingURL=icon.js.map

}).call(this,typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../tpl/icon.html":12,"./base":1}],5:[function(require,module,exports){
// Generated by CoffeeScript 1.12.1
(function() {
  var BaseModel, template, viewModel,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('./base');

  template = require('../tpl/input.html');

  ko.bindingHandlers.koxUpdateInputMargin = {
    update: function(element, valueAccessor, allBindings) {
      var margin;
      margin = allBindings.get('inputMargin');
      return setTimeout(function() {
        return margin(element.offsetWidth + "px");
      }, 5);
    }
  };

  viewModel = (function(superClass) {
    extend(viewModel, superClass);

    function viewModel(params, componentInfo) {
      var can_use_placeholder, icon, ieVersion, label, labelClick, ref, ref1;
      viewModel.__super__.constructor.call(this, params);
      this.data = ko.dataFor(componentInfo.element);
      ieVersion = (ref = ko.utils.ieVersion) != null ? ref : 10;
      can_use_placeholder = ieVersion > 9;
      this.marginLeft = ko.observable('8px');
      this.marginRight = ko.observable('8px');
      this.focus = ko.observable(ko.unwrap(params.hasFocus || false));
      if (ko.isObservable(params.hasFocus)) {
        this.disposes.push(this.focus.subscribe(function(v) {
          return params.hasFocus(v);
        }));
      }
      this.type = ko.observable(ko.unwrap(params.type || 'text'));
      this.placeholder = ko.computed(function() {
        return ko.unwrap(params.placeholder || null);
      });
      params.value = (ref1 = params.value) != null ? ref1 : ko.observable(null);
      this.origin_type = this.type();
      this.value = ko.computed({
        read: function() {
          var value;
          value = ko.unwrap(params.value || null);
          if (!can_use_placeholder && !value && !this.focus()) {
            if (this.type() === 'password') {
              this.type('text');
            }
            return this.placeholder();
          }
          if (this.type() !== this.origin_type) {
            this.type(this.origin_type);
          }
          return value;
        },
        write: function(value) {
          if (ko.isObservable(params.value)) {
            return params.value(value);
          }
        },
        owner: this
      });
      this.visible = ko.pureComputed(function() {
        return ko.unwrap(params.visible || true);
      });
      icon = ko.utils.extend({
        left: null,
        right: null
      }, params.icon);
      this.left_icon = ko.pureComputed(function() {
        return ko.unwrap(icon.left);
      });
      this.right_icon = ko.pureComputed(function() {
        return ko.unwrap(icon.right);
      });
      label = ko.utils.extend({
        left: null,
        right: null
      }, params.label);
      this.left_label = ko.pureComputed(function() {
        return ko.unwrap(label.left);
      });
      this.right_label = ko.pureComputed(function() {
        return ko.unwrap(label.right);
      });
      labelClick = ko.utils.extend({
        left: null,
        right: null
      }, params.labelClick);
      this.left_label_click = labelClick.left ? labelClick.left.bind(this.data) : this.labelClick;
      this.right_label_click = labelClick.right ? labelClick.right.bind(this.data) : this.labelClick;
      this.size = ko.pureComputed(function() {
        return ko.unwrap(params.size || null);
      });
      this.disable = ko.pureComputed(function() {
        return ko.unwrap(params.disable || null);
      });
      this.leftListener = ko.pureComputed((function(_this) {
        return function() {
          return _this.left_icon() || _this.left_label();
        };
      })(this));
      this.rightListener = ko.pureComputed((function(_this) {
        return function() {
          return _this.right_icon() || _this.right_label();
        };
      })(this));
      this.disposes = this.disposes.concat([this.value, this.visible, this.left_icon, this.right_icon, this.left_label, this.right_label, this.size, this.placeholder, this.disable, this.leftListener, this.rightListener]);
    }

    viewModel.prototype.labelClick = function() {
      return this.focus(true);
    };

    return viewModel;

  })(BaseModel);

  ko.components.register('ko-input', {
    viewModel: {
      createViewModel: function(params, componentInfo) {
        return new viewModel(params, componentInfo);
      }
    },
    template: template
  });

}).call(this);

//# sourceMappingURL=input.js.map

},{"../tpl/input.html":13,"./base":1}],6:[function(require,module,exports){
// Generated by CoffeeScript 1.12.1
(function() {
  var BaseModel, template, viewModel,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('./base');

  template = require('../tpl/loader.html');

  viewModel = (function(superClass) {
    extend(viewModel, superClass);

    function viewModel(params) {
      viewModel.__super__.constructor.call(this, params);
      this.visible = ko.pureComputed(function() {
        return ko.unwrap(params.visible || true);
      });
      this.cls = ko.pureComputed(function() {
        var cls, reverse, size;
        cls = 'ko-loader';
        size = ko.unwrap(params.size || null);
        if (size != null) {
          cls = cls + " ko-" + size;
        }
        reverse = ko.unwrap(params.reverse || false);
        if (reverse) {
          cls = cls + " ko-reverse";
        }
        return cls;
      });
      this.disposes = this.disposes.concat([this.visible, this.cls]);
    }

    return viewModel;

  })(BaseModel);

  ko.components.register('ko-loader', {
    viewModel: {
      createViewModel: function(params, componentInfo) {
        return new viewModel(params);
      }
    },
    template: template
  });

}).call(this);

//# sourceMappingURL=loader.js.map

},{"../tpl/loader.html":14,"./base":1}],7:[function(require,module,exports){
// Generated by CoffeeScript 1.12.1
(function() {
  var BaseModel, template, viewModel,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('./base');

  template = require('../tpl/row.html');

  viewModel = (function(superClass) {
    extend(viewModel, superClass);

    function viewModel(params, componentInfo) {
      var e;
      viewModel.__super__.constructor.call(this, params);
      this.data = {
        $context: params.data,
        gutter: params.gutter || null
      };
      e = componentInfo.element.firstChild;
      this.disposes.push(ko.computed((function(_this) {
        return function() {
          var gutter, px;
          gutter = ko.unwrap(_this.data.gutter);
          if (gutter != null) {
            px = "-" + (Math.floor(gutter / 2)) + "px";
            e.style['margin-left'] = px;
            return e.style['margin-right'] = px;
          } else {
            e.style['margin-left'] = 'auto';
            return e.style['margin-right'] = 'auto';
          }
        };
      })(this)));
      this.visible = ko.pureComputed((function(_this) {
        return function() {
          var ref;
          return ko.unwrap((ref = params.visible) != null ? ref : true);
        };
      })(this));
      this.disposes.push(this.visible);
    }

    return viewModel;

  })(BaseModel);

  ko.components.register('ko-row', {
    viewModel: {
      createViewModel: function(params, componentInfo) {
        params.data = ko.dataFor(componentInfo.element);
        return new viewModel(params, componentInfo);
      }
    },
    template: template
  });

}).call(this);

//# sourceMappingURL=row.js.map

},{"../tpl/row.html":15,"./base":1}],8:[function(require,module,exports){
// Generated by CoffeeScript 1.12.1
(function() {
  require('./utils/Common');

  require('./utils/Toggle');

  require('./component/row');

  require('./component/col');

  require('./component/icon');

  require('./component/loader');

  require('./component/button');

  require('./component/input');

}).call(this);

//# sourceMappingURL=index.js.map

},{"./component/button":2,"./component/col":3,"./component/icon":4,"./component/input":5,"./component/loader":6,"./component/row":7,"./utils/Common":16,"./utils/Toggle":17}],9:[function(require,module,exports){
module.exports = "<a data-bind=\"attr:{'class': cls, href: href},\n                   event: {mousedown: mouseDown, mouseup: mouseUp, mouseover: mouseOver, mouseout: mouseOut},\n                   click: click, disable: disable()\"><!--ko if: loading() && can_use_animate--><ko-loader params=\"size: size, reverse: !type()\"></ko-loader><!--/ko--><!--ko if: !loading() && icon()--><ko-icon params=\"type: icon, size: size\"></ko-icon><!--/ko--><span><!--ko template: {nodes: $componentTemplateNodes, data: data}--><!--/ko--></span></a>";

},{}],10:[function(require,module,exports){
module.exports = "<div data-bind=\"attr:{'class': cls}\"><!--ko template: {nodes: $componentTemplateNodes, data: data}--><!--/ko--></div>";

},{}],11:[function(require,module,exports){
module.exports = "<div data-bind=\"visible: visible\"><div style=\"min-height: 1px\"><!--ko template: {nodes: $componentTemplateNodes, data: data}--><!--/ko--></div></div>";

},{}],12:[function(require,module,exports){
module.exports = "<i data-bind=\"attr:{'class': cls}, html: type\"></i>";

},{}],13:[function(require,module,exports){
module.exports = "<div class=\"ko-input-box\" data-bind=\"visible: visible, css: {'ko-focus': focus, 'ko-large': size() == 'large', 'ko-small': size() == 'small', 'ko-disable': disable}\"><!--ko if: leftListener--><div class=\"ko-input-prepend\" data-bind=\"koxUpdateInputMargin: leftListener, inputMargin: marginLeft, click: left_label_click\"><!--ko if: left_icon--><!--ko if: left_icon() == 'loading'--><ko-loader params=\"size: size, reverse: true\"></ko-loader><!--/ko--><!--ko ifnot: left_icon() == 'loading'--><ko-icon params=\"type: left_icon, size: size\"></ko-icon><!--/ko--><!--/ko--><!--ko if: left_label--><span class=\"ko-label-left\" data-bind=\"text: left_label\"></span><!--/ko--></div><!--/ko--><div class=\"ko-input-wrapper\" data-bind=\"css: {'ko-left-icon': left_icon, 'ko-right-icon': right_icon}, style: {'margin-left': marginLeft, 'margin-right': marginRight}\"><!--ko if: type() == 'text'--><input type=\"text\" class=\"ko-input\" data-bind=\"hasFocus: focus, textInput: value, attr: {placeholder: placeholder}, disable: disable\"><!--/ko--><!--ko if: type() == 'password'--> <input type=\"password\" class=\"ko-input\" data-bind=\"hasFocus: focus, textInput: value, attr: {placeholder: placeholder}, disable: disable\"><!--/ko--></div><!--ko if: rightListener--><div class=\"ko-input-append\" data-bind=\"koxUpdateInputMargin: rightListener, inputMargin: marginRight, click: right_label_click\"><!--ko if: right_label--><span class=\"ko-label-right\" data-bind=\"text: right_label\"></span><!--/ko--><!--ko if: right_icon--><!--ko if: right_icon() == 'loading'--><ko-loader params=\"size: size, reverse: true\"></ko-loader><!--/ko--><!--ko ifnot: right_icon() == 'loading'--><ko-icon params=\"type: right_icon, size: size\"></ko-icon><!--/ko--><!--/ko--></div><!--/ko--></div>";

},{}],14:[function(require,module,exports){
module.exports = "<div data-bind=\"attr: {'class': cls}, visible: visible\"></div>";

},{}],15:[function(require,module,exports){
module.exports = "<div class=\"ko-row\" data-bind=\"visible: visible\"><!--ko template: {nodes: $componentTemplateNodes, data: data}--><!--/ko--></div>";

},{}],16:[function(require,module,exports){
// Generated by CoffeeScript 1.12.1
(function() {
  var ko;

  ko = (window.ko);

  ko.utils.hasClass = function(element, cls) {
    var check, obj_class;
    obj_class = element.className;
    check = ko.utils.arrayFilter(obj_class.split(/\s+/), function(c) {
      return c === cls;
    });
    return check.length > 0;
  };

  ko.bindingHandlers.debug = {
    update: function(element, valueAccessor) {
      return console.log(ko.unwrap(valueAccessor()));
    }
  };

  ko.virtualElements.allowedBindings.debug = true;

}).call(this);

//# sourceMappingURL=Common.js.map

},{}],17:[function(require,module,exports){
// Generated by CoffeeScript 1.12.1
(function() {
  var ko;

  ko = (window.ko);

  ko.bindingHandlers.toggle = {
    update: function(element, valueAccessor, allBindings) {
      var event, value;
      value = valueAccessor();
      event = allBindings.get('toggleEvent') || 'click';
      switch (event) {
        case 'hover':
          return ko.applyBindingsToNode(element, {
            event: {
              mouseover: function() {
                return value(!value());
              },
              mouseout: function() {
                return value(!value());
              }
            }
          });
        default:
          return ko.applyBindingsToNode(element, {
            click: function() {
              return value(!value());
            }
          });
      }
    }
  };

}).call(this);

//# sourceMappingURL=Toggle.js.map

},{}]},{},[8])